/* {
  "files": [],
  "references": [
    {
      "path": "./tsconfig.node.json"
    },
    {
      "path": "./tsconfig.app.json"
    }
  ]
} */

{
  "compilerOptions": {
    "target": "ESNext", // 指定转译后 js 版本
    "useDefineForClassFields": true, // 指定是否在编译时使用 ECMAScript 中的类字段定义语法
    "module": "ESNext", // 指定生成的模块代码
    "moduleResolution": "Node", // 指定 ts 在解析模块依赖关系时采用的模块解析策略
    "types": ["vite/client", "element-plus/global"], // 包含的类型声明

    /* Strict Type-Checking Options */
    "strict": true,
    "noImplicitAny": false, // 为隐含 any 类型的表达式和声明启用错误报告
    "jsx": "preserve", // 指定生成 jsx 代码
    "resolveJsonModule": true, // 启用导入 json 文件
    "isolatedModules": true, // 指定是否将每个文件视为独立的模块，而禁用全局模块的联合性检查
    "esModuleInterop": true, // 用于在编译时启用或禁用对 CommonJS 模块导入和导出的特殊处理  例：const module = require('module');
    "lib": ["ESNext", "DOM"], // 运行环境捆绑库的声明文件
    "skipLibCheck": true, // 定是否跳过对声明文件（.d.ts 文件）的全局声明的检查
    "noEmit": true, // 指定是否在编译过程中生成输出文件
    "baseUrl": "./",
    "paths": {
      "@": ["src"],
      "@/*": ["src/*"]
    }
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "build/**/*.ts",
    "build/**/*.d.ts",
    "vite.config.ts"
  ],
  "exclude": ["node_modules", "dist", "**/*.js"]
}
